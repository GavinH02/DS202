nhappy = if_else(happy == 'very happy', 3, nhappy)
)
happy$nhappy
happy %>%
group_by(partyid) %>%
summarise(
avg_happy = mean(nhappy, na.rm=TRUE)
)
happy %>%
group_by(finrela) %>%
summarise(
avg_happy = mean(nhappy, na.rm=TRUE)
)
happy %>%
group_by(finrela) %>%
summarise(
avg_happy = mean(nhappy, na.rm=TRUE)
)  %>% ggplot(aes(x=partyid, y=finrela)) + geom_bar()
happy %>%
group_by(partyid, finrela) %>%
summarise(
avg_happy = mean(nhappy, na.rm=TRUE)
)  %>% ggplot(aes(x=partyid, y=finrela)) + geom_bar()
happy %>%
group_by(partyid, finrela) %>%
summarise(
avg_happy = mean(nhappy, na.rm=TRUE)
)  %>% ggplot(aes(x=partyid, weight=avg_happy)) + geom_bar()
knitr::opts_chunk$set(echo = TRUE)
data("ChickWeight")
force(ChickWeight)
data("ChickWeight")
?ChickWeight
View(ChickWeight)
View(ChickWeight)
library(ggplot2)
diet_summary <- ChickWeight %>%
group_by(Diet) %>%
summarize(avg_weight = mean(weight),
sd_weight = sd(weight))
library(ggplot2)
library(dplyr)
diet_summary <- ChickWeight %>%
group_by(Diet) %>%
summarize(avg_weight = mean(weight),
sd_weight = sd(weight))
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
diet_summary <- ChickWeight %>%
group_by(Diet) %>%
summarize(avg_weight = mean(weight),
sd_weight = sd(weight))
library(ggplot2)
library(dplyr)
library(base)
library(stats)
diet_summary <- ChickWeight %>%
group_by(Diet) %>%
summarize(avg_weight = mean(weight),
sd_weight = sd(weight))
clear
library(ggplot2)
library(dplyr)
library(base)
library(stats)
diet_summary <- ChickWeight %>%
group_by(Diet) %>%
summarize(avg_weight = mean(weight),
sd_weight = sd(weight))
library(ggplot2)
library(dplyr)
library(base)
library(stats)
diet_summary <- ChickWeight %>%
group_by(Diet) %>%
summarize(avg_weight = mean(weight),
sd_weight = sd(weight))
View(diet_summary)
library(ggplot2)
library(dplyr)
library(base)
library(stats)
# Calculate average weight and standard deviation by diet
diet_summary <- ChickWeight %>%
group_by(Diet) %>%
summarize(avg_weight = mean(weight),
sd_weight = sd(weight))
# Plot the average weights by diet with error bars for standard deviation
ggplot(diet_summary, aes(x = diet, y = avg_weight)) +
geom_bar(stat = "identity", fill = "skyblue", width = 0.5) +
geom_errorbar(aes(ymin = avg_weight - sd_weight, ymax = avg_weight + sd_weight),
width = 0.2, color = "black") +
labs(title = "Average Weights by Diet with Standard Deviation",
x = "Diet",
y = "Average Weight") +
theme_minimal()
library(ggplot2)
library(dplyr)
library(base)
library(stats)
# Calculate average weight and standard deviation by diet
diet_summary <- ChickWeight %>%
group_by(Diet) %>%
summarize(avg_weight = mean(weight),
sd_weight = sd(weight))
library(ggplot2)
library(dplyr)
library(base)
library(stats)
# Calculate average weight and standard deviation by diet
diet_summary <- ChickWeight %>%
group_by(Diet) %>%
summarize(avg_weight = mean(weight),
sd_weight = sd(weight))
diet_summary
# Identify how many chicks have a complete set of weight measurements
complete_chicks <- chicks_data %>%
filter(num_measurements == 12)
# Identify how many chicks have a complete set of weight measurements
complete_chicks <- ChickWeight %>%
filter(num_measurements == 12)
# First, let's calculate the number of measurements for each chick
chicks_data <- chicks_data %>%
group_by(chick) %>%
mutate(num_measurements = n())
# First, let's calculate the number of measurements for each chick
chicks_data <- ChickWeight %>%
group_by(chick) %>%
mutate(num_measurements = n())
# First, let's calculate the number of measurements for each chick
chicks_data <- ChickWeight %>%
group_by(chick) %>%
mutate(num_measurements = n())
# First, let's calculate the number of measurements for each chick
chicks_data <- ChickWeight %>%
group_by(Chick) %>%
mutate(num_measurements = n())
# Identify how many chicks have a complete set of weight measurements
complete_chicks <- ChickWeight %>%
filter(n == 12)
# First, let's calculate the number of measurements for each chick
chicks_data <- ChickWeight %>%
group_by(Chick) %>%
mutate(num_measurements = n())
# Identify how many chicks have a complete set of weight measurements
complete_chicks <- ChickWeight %>%
filter(num_measurements == 12)
# First, let's calculate the number of measurements for each chick
chicks_data <- ChickWeight %>%
group_by(Chick) %>%
mutate(num_measurements = n())
# Identify how many chicks have a complete set of weight measurements
complete_chicks <- ChickWeight %>%
filter(n == 12)
# First, let's calculate the number of measurements for each chick
chicks_data <- ChickWeight %>%
group_by(Chick) %>%
mutate(num_measurements = n)
# First, let's calculate the number of measurements for each chick
chicks_data <- ChickWeight %>%
group_by(Chick) %>%
mutate(num_measurements = n())
# Identify how many chicks have a complete set of weight measurements
complete_chicks <- ChickWeight %>%
filter(n == 12)
# First, let's calculate the number of measurements for each chick
chicks_data <- ChickWeight %>%
group_by(Chick) %>%
mutate(num_measurements = n())
# Identify how many chicks have a complete set of weight measurements
complete_chicks <- ChickWeight %>%
filter(n == 12)
# First, let's calculate the number of measurements for each chick
chicks_data <- ChickWeight %>%
group_by(Chick) %>%
mutate(num_measurements = n())
# Identify how many chicks have a complete set of weight measurements
complete_chicks <- chicks_data %>%
filter(num_measurements == 12)
# Calculate the number of measurements on average in the incomplete cases
incomplete_avg <- chicks_data %>%
filter(num_measurements != 12) %>%
summarize(avg_measurements = mean(num_measurements))
# Extract a subset of the data for all chicks with complete information
complete <- chicks_data %>%
filter(num_measurements == 12)
View(complete)
View(chicks_data)
View(complete)
complete <- complete %>%
group_by(chick, diet) %>%
mutate(weightgain = weight - min(weight))
complete <- complete %>%
group_by(chick, diet) %>%
mutate(weightgain = weight - min(weight))
complete <- complete %>%
group_by(Chick, Diet) %>%
mutate(weightgain = weight - min(weight))
complete
complete <- complete %>%
mutate(Diet = factor(Diet, levels = levels(Diet)[order(tapply(weightgain, Diet, median))]))
# Filter data for day 21
day_21_data <- complete %>%
filter(Day == 21)
complete <- complete %>%
mutate(Diet = factor(Diet, levels = levels(Diet)[order(tapply(weightgain, Diet, median))]))
# Filter data for day 21
day_21_data <- complete %>%
filter(Time == 21)
# Create boxplot
ggplot(day_21_data, aes(x = Diet, y = weightgain)) +
geom_boxplot(fill = "skyblue") +
labs(title = "Weight Gain by Diet for Day 21",
x = "Diet",
y = "Weight Gain") +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
fly <- read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/flying-etiquette-survey/flying-etiquette.csv")
View(fly)
View(fly)
fly$Age <- factor(fly$Age, levels=c("18-29", "30-44", "45-60", "> 60", ""))
fly$Household.Income <- factor(fly$Household.Income, levels = c("$0 - $24,999","$25,000 - $49,999", "$50,000 - $99,999", "$100,000 - $149,999", "150000", ""))
fly$Education <- factor(fly$Education, levels = c("Less than high school degree", "High school degree", "Some college or Associate degree", "Bachelor degree",  "Graduate degree", ""))
library(ggplot2)
# Exclude respondents who never fly
survey_data <- fly %>%
filter(How.often.do.you.travel.by.plane. != "Never")
# Reorder levels in the variable by travel frequency
survey_data$How.often.do.you.travel.by.plane. <- factor(survey_data$How.often.do.you.travel.by.plane.,
levels = names(sort(table(survey_data$How.often.do.you.travel.by.plane.))))
# Draw a barchart of travel frequency
ggplot(survey_data, aes(x = How.often.do.you.travel.by.plane.)) +
geom_bar(fill = "skyblue") +
labs(title = "Travel Frequency by Plane",
x = "Frequency of Plane Travel",
y = "Count") +
theme_minimal()
library(ggplot2)
# Exclude respondents who never fly
survey_data <- fly %>%
filter(How.often.do.you.travel.by.plane. != "Never")
# Reorder levels in the variable by travel frequency
survey_data$How.often.do.you.travel.by.plane. <- factor(survey_data$How.often.do.you.travel.by.plane.,
levels = names(sort(table(survey_data$How.often.do.you.travel.by.plane.))))
# Draw a barchart of travel frequency
ggplot(survey_data, aes(x = How.often.do.you.travel.by.plane. angle=45)) +
library(ggplot2)
# Exclude respondents who never fly
survey_data <- fly %>%
filter(How.often.do.you.travel.by.plane. != "Never")
# Reorder levels in the variable by travel frequency
survey_data$How.often.do.you.travel.by.plane. <- factor(survey_data$How.often.do.you.travel.by.plane.,
levels = names(sort(table(survey_data$How.often.do.you.travel.by.plane.))))
# Draw a barchart of travel frequency
ggplot(survey_data, aes(x = How.often.do.you.travel.by.plane. , angle=45)) +
geom_bar(fill = "skyblue") +
labs(title = "Travel Frequency by Plane",
x = "Frequency of Plane Travel",
y = "Count") +
theme_minimal()
library(ggplot2)
# Exclude respondents who never fly
survey_data <- fly %>%
filter(How.often.do.you.travel.by.plane. != "Never")
# Reorder levels in the variable by travel frequency
survey_data$How.often.do.you.travel.by.plane. <- factor(survey_data$How.often.do.you.travel.by.plane.,
levels = names(sort(table(survey_data$How.often.do.you.travel.by.plane.))))
# Draw a barchart of travel frequency
ggplot(survey_data, aes(x = How.often.do.you.travel.by.plane., angle=45)) +
geom_bar(fill = "skyblue") +
labs(title = "Travel Frequency by Plane",
x = "Frequency of Plane Travel",
y = "Count") +
theme_minimal()
library(ggplot2)
# Exclude respondents who never fly
survey_data <- fly %>%
filter(How.often.do.you.travel.by.plane. != "Never")
# Reorder levels in the variable by travel frequency
survey_data$How.often.do.you.travel.by.plane. <- factor(survey_data$How.often.do.you.travel.by.plane.,
levels = names(sort(table(survey_data$How.often.do.you.travel.by.plane.))))
# Draw a barchart of travel frequency
ggplot(survey_data, aes(x = How.often.do.you.travel.by.plane.)) +
geom_bar(fill = "skyblue") +
labs(title = "Travel Frequency by Plane",
x = "Frequency of Plane Travel",
y = "Count") +
theme_minimal() + theme(axis.text.x=element_text(angle = -90, hjust = 0))
library(ggplot2)
# Exclude respondents who never fly
survey_data <- fly %>%
filter(How.often.do.you.travel.by.plane. != "Never")
# Reorder levels in the variable by travel frequency
survey_data$How.often.do.you.travel.by.plane. <- factor(survey_data$How.often.do.you.travel.by.plane.,
levels = names(sort(table(survey_data$How.often.do.you.travel.by.plane.))))
# Draw a barchart of travel frequency
ggplot(survey_data, aes(x = How.often.do.you.travel.by.plane.)) +
geom_bar(fill = "skyblue") +
labs(title = "Travel Frequency by Plane",
x = "Frequency of Plane Travel",
y = "Count") +
theme_minimal() + theme(axis.text.x=element_text(angle = 45, hjust = 0))
library(ggplot2)
# Exclude respondents who never fly
survey_data <- fly %>%
filter(How.often.do.you.travel.by.plane. != "Never")
# Reorder levels in the variable by travel frequency
survey_data$How.often.do.you.travel.by.plane. <- factor(survey_data$How.often.do.you.travel.by.plane.,
levels = names(sort(table(survey_data$How.often.do.you.travel.by.plane.))))
# Draw a barchart of travel frequency
ggplot(survey_data, aes(x = How.often.do.you.travel.by.plane.)) +
geom_bar(fill = "skyblue") +
labs(title = "Travel Frequency by Plane",
x = "Frequency of Plane Travel",
y = "Count") +
theme_minimal() + theme(axis.text.x=element_text(angle = -45, hjust = 0))
library(ggplot2)
# Exclude respondents who never fly
survey_data <- fly %>%
filter(How.often.do.you.travel.by.plane. != "Never")
# Reorder levels in the variable by travel frequency
survey_data$How.often.do.you.travel.by.plane. <- factor(survey_data$How.often.do.you.travel.by.plane.,
levels = names(sort(table(survey_data$How.often.do.you.travel.by.plane.))))
# Draw a barchart of travel frequency
ggplot(survey_data, aes(x = How.often.do.you.travel.by.plane.)) +
geom_bar(fill = "skyblue") +
labs(title = "Travel Frequency by Plane",
x = "Frequency of Plane Travel",
y = "Count") +
theme_minimal() + theme(axis.text.x=element_text(angle = -35, hjust = 0))
library(ggplot2)
# Exclude respondents who never fly
survey_data <- fly %>%
filter(How.often.do.you.travel.by.plane. != "Never")
# Reorder levels in the variable by travel frequency
survey_data$How.often.do.you.travel.by.plane. <- factor(survey_data$How.often.do.you.travel.by.plane.,
levels = names(sort(table(survey_data$How.often.do.you.travel.by.plane.))))
# Draw a barchart of travel frequency
ggplot(survey_data, aes(x = How.often.do.you.travel.by.plane.)) +
geom_bar(fill = "skyblue") +
labs(title = "Travel Frequency by Plane",
x = "Frequency of Plane Travel",
y = "Count") +
theme_minimal() + theme(axis.text.x=element_text(angle = -20, hjust = 0))
library(ggplot2)
# Exclude respondents who never fly
survey_data <- fly %>%
filter(How.often.do.you.travel.by.plane. != "Never")
# Reorder levels in the variable by travel frequency
survey_data$How.often.do.you.travel.by.plane. <- factor(survey_data$How.often.do.you.travel.by.plane.,
levels = names(sort(table(survey_data$How.often.do.you.travel.by.plane.))))
# Draw a barchart of travel frequency
ggplot(survey_data, aes(x = How.often.do.you.travel.by.plane.)) +
geom_bar(fill = "skyblue") +
labs(title = "Travel Frequency by Plane",
x = "Frequency of Plane Travel",
y = "Count") +
theme_minimal() + theme(axis.text.x=element_text(angle = -30, hjust = 0))
library(ggplot2)
# Exclude respondents who never fly
survey_data <- fly %>%
filter(How.often.do.you.travel.by.plane. != "Never")
# Reorder levels in the variable by travel frequency
survey_data$How.often.do.you.travel.by.plane. <- factor(survey_data$How.often.do.you.travel.by.plane.,
levels = names(sort(table(survey_data$How.often.do.you.travel.by.plane.))))
# Draw a barchart of travel frequency
ggplot(survey_data, aes(x = How.often.do.you.travel.by.plane.)) +
geom_bar(fill = "skyblue") +
labs(title = "Travel Frequency by Plane",
x = "Frequency of Plane Travel",
y = "Count") +
theme_minimal() +
theme(axis.text.x=element_text(angle = -30, hjust = 0))
library(ggplot2)
# Exclude respondents who never fly
survey_data <- fly %>%
filter(How.often.do.you.travel.by.plane. != "Never")
# Reorder levels in the variable by travel frequency
survey_data$How.often.do.you.travel.by.plane. <- factor(survey_data$How.often.do.you.travel.by.plane.,
levels = names(sort(table(survey_data$How.often.do.you.travel.by.plane.))))
# Draw a barchart of travel frequency
ggplot(survey_data, aes(x = How.often.do.you.travel.by.plane.)) +
geom_bar(fill = "skyblue") +
labs(title = "Travel Frequency by Plane",
x = "Frequency of Plane Travel",
y = "Count") +
theme_minimal() +
theme(axis.text.x=element_text(angle = -30, hjust = 0))
# Number of records in the dataset
n_records <- nrow(survey_data)
n_records
# Replace empty strings with NA
survey_data$Education <- ifelse(survey_data$Education == "", NA, survey_data$Education)
survey_data$Age <- ifelse(survey_data$Age == "", NA, survey_data$Age)
survey_data$Household.Income <- ifelse(survey_data$Household.Income == "", NA, survey_data$Household.Income)
# Count responses without missing values in each variable
education_no_missing <- sum(!is.na(survey_data$Education))
age_no_missing <- sum(!is.na(survey_data$Age))
income_no_missing <- sum(!is.na(survey_data$Household.Income))
# Count responses with no missing values in any of the three variables
no_missing_all <- sum(complete.cases(survey_data[c("Education", "Age", "Household.Income")]))
# Display the counts
print(paste("Number of responses without missing values in Education:", education_no_missing))
print(paste("Number of responses without missing values in Age:", age_no_missing))
print(paste("Number of responses without missing values in Household Income:", income_no_missing))
print(paste("Number of responses with no missing values in any of the three variables:", no_missing_all))
View(survey_data)
library(ggplot2)
fly$Education = with(fly, factor(Education, levels = rev(levels(Education))))
ggplot(data = fly, aes(x = 1)) +
geom_bar(aes(fill=Education), position="fill") +
coord_flip() +
theme(legend.position="bottom") +
scale_fill_brewer() +
xlab("Ratio")
library(base)
library(stats)
library(dplyr)
# Rename the variable
survey_data <- survey_data %>%
rename(baby.on.plane = In.general..is.itrude.to.bring.a.baby.on.a.plane.)
# Replace "" with "Not answered"
survey_data$baby.on.plane <- ifelse(survey_data$baby.on.plane == "", "Not answered", survey_data$baby.on.plane)
# Convert to factor to reorder levels
survey_data$baby.on.plane <- factor(survey_data$baby.on.plane, levels = c("Not rude at all", "Not sure", "Somewhat rude", "Very rude", "Not answered"))
# Draw barchart
ggplot(survey_data, aes(x = baby.on.plane)) +
geom_bar(fill = "skyblue") +
labs(title = "Opinions on Bringing a Baby on a Plane",
x = "Rudeness Level",
y = "Count") +
theme_minimal()
fly <- read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/flying-etiquette-survey/flying-etiquette.csv")
fly$Age <- factor(fly$Age, levels=c("18-29", "30-44", "45-60", "> 60", ""))
fly$Household.Income <- factor(fly$Household.Income, levels = c("$0 - $24,999","$25,000 - $49,999", "$50,000 - $99,999", "$100,000 - $149,999", "150000", ""))
fly$Education <- factor(fly$Education, levels = c("Less than high school degree", "High school degree", "Some college or Associate degree", "Bachelor degree",  "Graduate degree", ""))
library(ggplot2)
# Exclude respondents who never fly
survey_data <- fly %>%
filter(How.often.do.you.travel.by.plane. != "Never")
# Reorder levels in the variable by travel frequency
survey_data$How.often.do.you.travel.by.plane. <- factor(survey_data$How.often.do.you.travel.by.plane.,
levels = names(sort(table(survey_data$How.often.do.you.travel.by.plane.))))
# Draw a barchart of travel frequency
ggplot(survey_data, aes(x = How.often.do.you.travel.by.plane.)) +
geom_bar(fill = "skyblue") +
labs(title = "Travel Frequency by Plane",
x = "Frequency of Plane Travel",
y = "Count") +
theme_minimal() +
theme(axis.text.x=element_text(angle = -30, hjust = 0))
# Number of records in the dataset
n_records <- nrow(survey_data)
n_records
library(ggplot2)
# Exclude respondents who never fly
survey_data <- fly %>%
filter(How.often.do.you.travel.by.plane. != "Never")
# Reorder levels in the variable by travel frequency
survey_data$How.often.do.you.travel.by.plane. <- factor(survey_data$How.often.do.you.travel.by.plane.,
levels = names(sort(table(survey_data$How.often.do.you.travel.by.plane.))))
# Draw a barchart of travel frequency
ggplot(survey_data, aes(x = How.often.do.you.travel.by.plane.)) +
geom_bar(fill = "skyblue") +
labs(title = "Travel Frequency by Plane",
x = "Frequency of Plane Travel",
y = "Count") +
theme_minimal() +
theme(axis.text.x=element_text(angle = -30, hjust = 0))
# Number of records in the dataset
n_records <- nrow(survey_data)
n_records
# Replace empty strings with NA
survey_data$Education <- ifelse(survey_data$Education == "", NA, survey_data$Education)
survey_data$Age <- ifelse(survey_data$Age == "", NA, survey_data$Age)
survey_data$Household.Income <- ifelse(survey_data$Household.Income == "", NA, survey_data$Household.Income)
# Count responses without missing values in each variable
education_no_missing <- sum(!is.na(survey_data$Education))
age_no_missing <- sum(!is.na(survey_data$Age))
income_no_missing <- sum(!is.na(survey_data$Household.Income))
# Count responses with no missing values in any of the three variables
no_missing_all <- sum(complete.cases(survey_data[c("Education", "Age", "Household.Income")]))
# Display the counts
print(paste("Number of responses without missing values in Education:", education_no_missing))
print(paste("Number of responses without missing values in Age:", age_no_missing))
print(paste("Number of responses without missing values in Household Income:", income_no_missing))
print(paste("Number of responses with no missing values in any of the three variables:", no_missing_all))
library(base)
library(stats)
library(dplyr)
# Rename the variable
names(survey_data)[which(names(survey_data) == "In.general..is.itrude.to.bring.a.baby.on.a.plane.")] <- "baby.on.plane"
# Check number of levels and their names
levels_baby_on_plane <- levels(survey_data$baby.on.plane)
num_levels <- length(levels_baby_on_plane)
print(paste("Number of levels in baby.on.plane:", num_levels))
print("Levels of baby.on.plane:")
print(levels_baby_on_plane)
# Rename level labeled "" to "Not answered"
survey_data$baby.on.plane <- ifelse(survey_data$baby.on.plane == "", "Not answered", survey_data$baby.on.plane)
# Reorder levels of baby.on.plane
survey_data$baby.on.plane <- factor(survey_data$baby.on.plane,
levels = c(levels_baby_on_plane[order(levels_baby_on_plane != "Not answered")], "Not answered"))
# Draw a barchart
ggplot(survey_data, aes(x = baby.on.plane)) +
geom_bar(fill = "skyblue") +
labs(title = "Is it rude to bring a baby on a plane?",
x = "Response",
y = "Count") +
theme_minimal()
